/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainmenu_screen/mainmenuViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

mainmenuViewBase::mainmenuViewBase() :
    buttonCallback(this, &mainmenuViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    monkeyhead.setXY(0, 0);
    monkeyhead.setBitmap(touchgfx::Bitmap(BITMAP_MONKEY_ID));

    speedup.setXY(576, 349);
    speedup.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_UP_ARROW_48_ID));
    speedup.setIconXY(62, 17);
    speedup.setAction(buttonCallback);

    speeddown.setXY(576, 403);
    speeddown.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_48_ID), touchgfx::Bitmap(BITMAP_BLUE_ICONS_DOWN_ARROW_48_ID));
    speeddown.setIconXY(62, 17);
    speeddown.setAction(buttonCallback);

    mode.setXY(50, 373);
    mode.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    mode.setLabelText(touchgfx::TypedText(T___SINGLEUSE_SUFS));
    mode.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    mode.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    mode.setAction(buttonCallback);

    dutycycle.setXY(164, 37);
    dutycycle.setColor(touchgfx::Color::getColorFromRGB(250, 250, 250));
    dutycycle.setLinespacing(0);
    dutycycle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_STX4));

    temperature.setXY(164, 117);
    temperature.setColor(touchgfx::Color::getColorFromRGB(250, 250, 250));
    temperature.setLinespacing(0);
    temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HF4N));

    dutycctext.setXY(19, 55);
    dutycctext.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dutycctext.setLinespacing(0);
    dutycctext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DYZE));

    temptext.setXY(19, 117);
    temptext.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    temptext.setLinespacing(0);
    temptext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QVAR));

    uptimetext.setXY(455, 36);
    uptimetext.setColor(touchgfx::Color::getColorFromRGB(255, 247, 13));
    uptimetext.setLinespacing(0);
    uptimetext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7Q0V));

    upuptime.setXY(576, 36);
    upuptime.setColor(touchgfx::Color::getColorFromRGB(255, 247, 13));
    upuptime.setLinespacing(0);
    upuptime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86OJ));

    threshtext.setXY(19, 168);
    threshtext.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    threshtext.setLinespacing(0);
    threshtext.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CNED));

    thresh.setXY(164, 168);
    thresh.setColor(touchgfx::Color::getColorFromRGB(250, 250, 250));
    thresh.setLinespacing(0);
    thresh.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EFUE));

    add(__background);
    add(monkeyhead);
    add(speedup);
    add(speeddown);
    add(mode);
    add(dutycycle);
    add(temperature);
    add(dutycctext);
    add(temptext);
    add(uptimetext);
    add(upuptime);
    add(threshtext);
    add(thresh);
}

void mainmenuViewBase::setupScreen()
{

}

void mainmenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &speedup)
    {
        //speedup
        //When speedup clicked call virtual function
        //Call speedup_pressed
        speedup_pressed();
    }
    else if (&src == &speeddown)
    {
        //speeddown
        //When speeddown clicked call virtual function
        //Call speeddown_pressed
        speeddown_pressed();
    }
    else if (&src == &mode)
    {
        //modeclick
        //When mode clicked call virtual function
        //Call mode_pressed
        mode_pressed();
    }
}

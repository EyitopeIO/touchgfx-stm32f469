/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINMENUVIEWBASE_HPP
#define MAINMENUVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/mainmenu_screen/mainmenuPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class mainmenuViewBase : public touchgfx::View<mainmenuPresenter>
{
public:
    mainmenuViewBase();
    virtual ~mainmenuViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void speedup_pressed()
    {
        // Override and implement this function in mainmenu
    }

    virtual void speeddown_pressed()
    {
        // Override and implement this function in mainmenu
    }

    virtual void mode_pressed()
    {
        // Override and implement this function in mainmenu
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image monkeyhead;
    touchgfx::ClickListener< touchgfx::ButtonWithIcon > speedup;
    touchgfx::ClickListener< touchgfx::ButtonWithIcon > speeddown;
    touchgfx::ClickListener< touchgfx::ButtonWithLabel > mode;
    touchgfx::TextAreaWithOneWildcard dutycycle;
    touchgfx::TextAreaWithOneWildcard temperature;
    touchgfx::TextArea dutycctext;
    touchgfx::TextArea temptext;
    touchgfx::TextArea uptimetext;
    touchgfx::TextAreaWithOneWildcard upuptime;
    touchgfx::TextArea threshtext;
    touchgfx::TextAreaWithOneWildcard thresh;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<mainmenuViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // MAINMENUVIEWBASE_HPP
